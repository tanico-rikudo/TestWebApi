version: "3.8"

services:
  fastapi:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./app/logs:/app/logs
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/fastapi_db

  db:
    image: postgres:15
    container_name: fastapi_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fastapi_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres_data/logs/db:/etc/log/postgresql
      - ./postgres_data/config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fastapi_db"]
      interval: 5s
      retries: 5
      timeout: 3s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_data/config:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./grafana_data:/var/lib/grafana
    env_file:
      - ./grafana_data/config/grafana.env

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    # volumes:
    #   - /proc:/host/proc:ro
    #   - /sys:/host/sys:ro
    #   - /:/rootfs:ro
    # command:
    #   - "--path.procfs=/host/proc"
    #   - "--path.rootfs=/rootfs"
    #   - "--path.sysfs=/host/sys"
    #   - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    hostname: alertmanager
    restart: always
    volumes:
      - ./alertmanager_data:/etc/alertmanager
    command:
      - "--config.file=/etc/alertmanager/config.yaml"
    ports:
      - 9093:9093

  # mail:
  #   image: mailhog/mailhog
  #   container_name: mailhog
  #   ports:
  #     - "8025:8025"
  #   environment:
  #     MH_STORAGE: maildir
  #     MH_MAILDIR_PATH: /tmp
  #   volumes:
  #     - maildir:/tmp

  # loki:
  #   image: grafana/loki
  #   container_name: loki
  #   volumes:
  #     - ./loki_data:/loki
  #   ports:
  #     - 3100:3100
  #   command: -config.file=/etc/loki/local-config.yaml

volumes:
  pgdata:
  maildir:
